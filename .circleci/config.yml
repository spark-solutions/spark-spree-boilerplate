version: 2
jobs:
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/spark-starter-kit # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/ruby:2.5.1-node-browsers # ...with this image as the primary container; this is where all `steps` will run
        environment: # environment variables for primary container
          PGHOST: localhost
          PGUSER: postgres
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          RAILS_ENV: test
      - image: circleci/postgres:10.0-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: spark-starter-kit_test
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory

      - run:
          name: Which bundler?
          command: bundle -v

      # bundle install
      - restore_cache:
          keys:
            - spark-starter-kit-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle Install
          command: |
            bundle check || bundle install --path vendor/bundle --deployment

      - save_cache:
          key: spark-starter-kit-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # yarn install
      - restore_cache:
          keys:
            - javascript-cache-v1-{{ checksum "package.json" }}

      - run:
          command: yarn install --ignore-engines

      - save_cache:
          key: javascript-cache-v1-{{ checksum "package.json" }}
          paths:
            - node_modules


      # setup db
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Setup databse
          command: bundle exec rake db:schema:load --trace

      # rspec
      - run:
          name: Run rspec
          command: bundle exec rspec
